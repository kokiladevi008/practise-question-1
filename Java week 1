Q1. Even / Odd

import java.util.Scanner;
public class evevodd { 
public static void main(String[] args) {
		 Scanner kbd = new Scanner(System.in);
		 int n=kbd.nextInt();
		 if(n%2==0) {
			 System.out.println("EVEN");
			  }
		 else {
			 System.out.println("odd");
		 }
  }
}
OUTPUT:
2
even
11
odd

Q2. Positive / Negative

import java.util.Scanner;

public class negativepostive {

	public static void main(String[] args) {
		
		Scanner kbd=new Scanner(System.in);
		
		int n=kbd.nextInt();
		if(n>0) {
			System.out.println("POSTIVE");
		}
		
		else if(n<0){
			System.out.println("NEGATIVE");
		}
		
		else {
			System.out.println("ZERO");
		}
	}
 OUTPUT:
 8
 postive
 -11
 negative
 0
 zero

Q3. Divisible by 3 and 5

import java.util.Scanner;

public class divisible {

	public static void main(String[] args) {
		
		Scanner kbd = new Scanner(System.in);
		 
		 int n=kbd.nextInt();
		 if(n%3==0 && n%5==0) {
			 System.out.println("yes");
		 }
		 else {
			 System.out.println("no");
		 }
		 

	}

}
OUTPUT:
15
YES
26
NO

Q4. Convert Days into Years, Months, Days
import java.util.Scanner;

public class conveter {
	public static void main(String[] args) {
		
		
		        Scanner scanner = new Scanner(System.in);
		        int totalDays = scanner.nextInt();
          
		        int years = totalDays / 365;
          
		        int remainingAfterYears = totalDays % 365;
		        int months = remainingAfterYears / 30;
		        int days = remainingAfterYears % 30;

		        
		        System.out.println("Years: " + years);
		        System.out.println("Months: " + months);
		        System.out.println("Days: " + days);

		        
		    }
		}
OUTPUT:
500
YEAR:500
MONTH:4
DAYS:15


Q6. Max & Min of 2 Numbers 
import java.util.Scanner;

public class minmax {
	public static void main(String[] args) {
		
		Scanner kbd = new Scanner(System.in);
		 
		        int a = kbd.nextInt();
		        int b = kbd.nextInt();

		        int max = (a > b) ? a : b;
		        int min = (a < b) ? a : b;
		        System.out.println("Max=" + max + " Min=" + min);

		        }
		}
OUTPUT:
4 9
MIN:4
MAX:9

Q7. Max of 3 Numbers 
import java.util.Scanner;

public class max3num {

	public static void main(String[] args) {
		Scanner scanner = new Scanner(System.in);
		      int a = scanner.nextInt();
	        int b = scanner.nextInt();
	        int c = scanner.nextInt();

	    	 int max = Math.max(a, Math.max(b, c));
       
	        System.out.println(max);
         
	}

}
OUTPUT:
45 23 90
MAX 90
##########################################################
Q8.Positive, Negative or Zero 
 import java.util.Scanner;

public class Posnegzero {
	public static void main(String[] args) {
		Scanner kbd=new Scanner(System.in);
				
				int n=kbd.nextInt();
				if(n>0) {
					System.out.println("POSTIVE");
				}
				
				else if(n<0){
					System.out.println("NEGATIVE");
				}
				
				else {
					System.out.println("ZERO");
				}
			}
		}
  OUTPUT:
  9
  POSTIVE
  -5
  NEGATIVE
  0
  ZERO
  ###################################################
  Q9. Customer Grouping
  import java.util.Scanner;

public class Gendergrouping {

	public static void main(String[] args) {
		
		Scanner scanner = new Scanner(System.in);
		 
		 int age= scanner.nextInt();
		 int gender=scanner.nextInt();
		 
		 if (gender == 1) { // Male
	            if (age < 25) {
	                System.out.println("Group 1");
	            } else if (age <= 45) {
	                System.out.println("Group 3");
	            } else {
	                System.out.println("Group 5");
	            }
	        } 
		 
	        
	       else if (gender == 2) { // Female
	            if (age < 25) {
	                System.out.println("Group 2");
	            } else if (age <= 45) {
	                System.out.println("Group 4");
	            } else {
	                System.out.println("Group 5");
	            }
	        } else {
	            System.out.println("Invalid");
	        }
	    }
	}

output:
23
1
Group 1
56
Q10. SBI Credit Card Eligibility
import java.util.Scanner;

public class sbi {
	public static void main(String[] args) {
		
		Scanner sc = new Scanner(System.in);

	        int primaryAge = sc.nextInt();      
	        int addonAge = sc.nextInt();         
	        int employmentType = sc.nextInt();   
	        int income = sc.nextInt();           

	       
	        if (primaryAge >= 21 && primaryAge <= 60 &&
	            addonAge > 18 &&
	            (employmentType == 1 || employmentType == 2 || employmentType == 3 || employmentType == 4) &&
	            income <= 300000) {

	            System.out.println("Yes. You are eligible for SBI credit cards");
	        } else {
	            System.out.println("No. You are not eligible for SBI credit cards");
	        }

	       
	    }
	}
OUPUT:
55
25
300000
Yes. You are eligible for SBI credit cards
20
17
400000
No. You are not eligible for SBI credit cards
2
Group 2
45
3
Invaild
/*
Q11. Triangle Shape (Easy)
Check whether a triangle is Equilateral, Isosceles, or Scalene.
Input format :
Sides of the triangle in separate lines.
Output format :
Type of triangle.
Sample test cases :
Input :
18
18
18
Output :
Equilateral Triangle
Input :
12
25
15
Output :
Scalene Triangle
Input :
52
52
323
Output :
Isosceles Triangle 
*/
package week1;
import java.util.Scanner;
public class TriangleShape {
	static void eq(int a, int b, int c) {	
		if(a==b && a ==c && b==c) System.out.println("Equilateral Triangle");
		if(a==b || b==c || a==c) System.out.println("Scalene Triangle");
		if(a !=b && a!=c && b!=c) System.out.println("Isosceles Triangle");
	}
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		int a = sc.nextInt(), b = sc.nextInt(), c = sc.nextInt();
		eq(a, b, c);

		sc.close();
	}
}
/*
Q24. /*
Q24. Prime Number (Easy)
Check whether a number is Prime.
Input format :
An integer.
Output format :
Prime / Not Prime.
Sample test cases :
Input :
7
Output :
Prime
Input :
10
Output :
Not Prime
*/
package week1;
import java.util.Scanner;
public class PrimeNumber {
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		int n=sc.nextInt();
		boolean val = true;
		for(int i=2; i< Math.sqrt(n); i++) {
			if(n % i == 0) {
				val = false;
				break;
			}
			else val = true;
		}
		if(val) System.out.println("Prime");
		else System.out.println("Not Prime");
		
	}
}
/*
Q18. Print Digits Right to Left (Easy)
Print digits of a given number from right to left.
Input format :
An integer.
Output format :
Digits separated by space.
Sample test cases :
Input :
1234
Output :
4 3 2 1 
*/
package week1;
import java.util.Scanner;
public class PrintDigitsRightToLeft {
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		int n=sc.nextInt();
		int digit;
		while(n>0) {
			digit = n %10;
			System.out.print(digit + " ");
			n /=10;
		}
		
	}
}
/*
Q15. Sum of Even Numbers (Easy)
Find the sum of even numbers between 1 and a given number.
Input format :
An integer.
Output format :
Sum of even numbers.
Sample test cases :
Input :
10
Output :
30
Input :
7
Output :
12 
*/
package week1;
import java.util.Scanner;
public class SumOfEvenNumbers {
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		int sum=0, n = sc.nextInt();
		for(int i=1; i<=n; i++) if( i %2==0) sum+=i;
		System.out.print(sum);
		
	}
}
/*
Q19. Sum of Numbers Divisible by 3 or 5 (Medium)
Accept an integer range and print the sum of numbers that are divisible by either 3 or 5.
Input format :
Two integers (start and end).
Output format :
Sum of numbers.
Sample test cases :
Input :
1 10
Output :
33
*/
package week1;
import java.util.Scanner;
public class SumOfNumbersDivisibleby3or5 {
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		int sum=0, s =sc.nextInt(), e =sc.nextInt();
		for(int i=s; i<=e; i++) if(i % 3==0 || i%5 ==0) sum +=i;
		System.out.println(sum);
		
	}
}
/*
Q16. Sum of Odd and Even Numbers (Medium)
Find the sum of odd and even numbers from 1 to N.
Input format :
An integer.
Output format :
Sum of odd numbers and sum of even numbers separated by a space.
Sample test cases :
Input :
10
Output :
25 30
Input :
15
Output :
64 56
*/
package week1;
import java.util.Scanner;
public class SumOfOddAndEvenNumbers {
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		int oddSum=0, evenSum=0, n= sc.nextInt();
		for(int i=1; i<=n; i++) {
			if(i%2 ==0) evenSum += i;
			else oddSum +=i;
		}
		System.out.println(oddSum + " " + evenSum);
		
		
	}
}
/*
Q25. Perfect Square (Easy)
Check whether a number is a Perfect Square.
Input format :
An integer.
Output format :
Perfect Square / Not Perfect Square.
Sample test cases :
Input :
25
Output :
Perfect Square
Input :
20
Output :
Not Perfect Square 
*/
package week1;
import java.util.Scanner;
public class PerfectSquare {
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		int n=sc.nextInt();
		boolean val =false;
		for(int i=1; i<=n/2; i++) {
			if(i*i == n) {
				val = true;
				break;
			} else val = false;
		}
		if(val) System.out.println("Perfect Square");
		else System.out.println("Not Perfect Square");
		sc.close();
	}
}
/*
Q11: Palindrome Number [Easy]
- Input: 121
Output: Palindrome
- Input: 12321
Output: Palindrome 
*/
package week2;
import java.util.Scanner;
public class PalindromeNumber {
	public static void main(String[] args) {
		 , temp=n, rev=0, digit;
		while(n>0) {
			digit = n %10;
			rev = rev*10 + digit;
			n /= 10;
		}
		if(rev == temp) System.out.println("Palindrome");
		else System.out.println("Not Palindrome");
		sc.close();
	}
}
/*
Q22. Harshad Number (Medium)
Check whether the given number is a Harshad Number.
(A Harshad Number is divisible by the sum of its digits.)
Input format :
An integer.
Output format :
Harshad / Not Harshad.
Sample test cases :
Input :
18
Output :
Harshad Number
Input :
21
Output :
Not /*
Q22. Harshad Number (Medium)
Check whether the given number is a Harshad Number.
(A Harshad Number is divisible by the sum of its digits.)
Input format :
An integer.
Output format :
Harshad / Not Harshad.
Sample test cases :
Input :
18
Output :
Harshad Number
Input :
21
Output :
Not Harshad Number 
*/
package week1;
import java.util.Scanner;
public class HarshadNumber {
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		int n=sc.nextInt(), sum=0, digit, temp = n;
		while(n>0) {
			digit = n %10;
			sum += digit;
			n /= 10;
		}
	}
/*
Q26. Fibonacci Series (Easy)
Print Fibonacci Series up to N terms.
Input format :
An integer N.
Output format :
First N terms of Fibonacci series.
Sample test cases :
Input :
5
Output :
0 1 1 2 3
*/
package week1;
import java.util.Scanner;
public class FibonacciSeries {
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		int pre1=1, pre2=0, curr, n = sc.nextInt();
		int arr[] = new int[n];
		if(n==1) {
			arr[0]=0;
		}
		else if(n==2) {
			arr[0] =0;
			arr[1] = 1;
		}
		else if(n >2) {
			arr[0] =0;
			arr[1] = 1;
			for(int i=2; i<n; i++) {
				curr = pre1 + pre2;
				arr[i] = curr;
				pre1 = curr;
				pre2 = pre1;
			}
		}
		for(int i=0; i<n; i++) {
			System.out.print(arr[i] + " ");
		}
		sc.close();
	}
}
/*
Q17. Factorial (Medium)
Find the factorial of a number.
Input format :
An integer.
Output format :
Factorial value.
Sample test cases :
Input :
5
Output :
120
Input :
-7
Output :
Error! Factorial of a negative number doesn't exist. 
*/
package week1;
import java.util.Scanner;
public class Factorial {
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		int fact=1, n = sc.nextInt();
		if(n >=0) {
			if(n ==0) System.out.println("1");
			if(n>0) {
				for(int i=n; i>=1; i--) {
					fact *= i;
				}System.out.println(fact);
			}
		}
		else System.out.println("Error! Factorial of a negative number doesn't exist.");
		sc.close();
	}
}
/*
Q12. Descending Order of 4 Numbers (Easy)
Arrange four numbers in descending order.
Input format :
Four integers separated by spaces.
Output format :
Numbers in descending order.
Sample test cases :
Input :
5 8 2 9
Output :
9 8 5 2 
*/
package week1;
import java.util.Scanner;
public class DescendingOrderOf4Numbers {
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		int arr[] = new int[4];
		int temp;
		for(int i=0; i<4; i++) {
			arr[i] = sc.nextInt();
		}
		for(int j=0; j<4; j++) {
			for(int k=j+1; k<4; k++) {
				if(arr[j] < arr[k]) {
					temp = arr[j]; 
					arr[j] = arr[k];
					arr[k] = temp;			
				}
			}
		}
		for(int a:arr) System.out.print(a + " ");
		sc.close();
	}
}
*
Q20. Count Digits (Easy)
Count the number of digits in a number.
Input format :
An integer.
Output format :
Digit count.
Sample test cases :
Input :
98765
Output :
5
*/
package week1;
import java.util.Scanner;
public class /*
Q20. Count Digits (Easy)
Count the number of digits in a number.
Input format :
An integer.
Output fOutput :
5
*/
package week1;
import java.util.Scanner;
public class CountDigits {
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		int n=sc.nextInt();
		int count=0;	
		while(n>0) {
			count++;			
			n/=10;
		}
		System.out.println(count);
		sc.close();
	}
Q13. Character Type (Easy)
Determine whether the given character is an alphabet, a digit, or a special character.
Input format :
A single character.
Output format :
alphabet / digit / special
Sample test cases :
Input :
A
Output :
alphabet
Input :
7
Output :
digit
Input :
@
Output :
special
*/
package week1;
import java.util.Scanner;
public class CharacterType {
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		char letter = sc.next().charAt(0);
		if(letter >=48 && letter <=57) System.out.print("digit");
		else if((letter>=65 && letter <=90) || (letter >=97 && letter <=122)) System.out.print("alphabet");
		else System.out.print("special");
		sc.close();
	}
}
	
